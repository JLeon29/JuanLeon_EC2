package com.jleon.bodega.security;

import org.springframework.security.core.userdetails.UserDetails;

public class JWTUserDetailsService implements UserDetails {
	
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		
		Usuario usuario = repository.findByUsuario(username);
		if(usuario != null) {
			
			//GrantedAuthority permite que se almacenar√° roles para un usuario
			List<GrantedAuthority> granted = new ArrayList<GrantedAuthority>();
			//Transformamos el rol a tipo GrantedAuthority
			GrantedAuthority authority = new SimpleGrantedAuthority(usuario.getRol());
			//Agreamos a la lista
			granted.add(authority);
			
			return new User(usuario.getUsuario(), new BCryptPasswordEncoder().encode(usuario.getContrasenia()), granted);
			
		}else {
			throw new UsernameNotFoundException("El usuario no existe");
		}
		
		
		/*
		
		//En memoria
		//equals --> para comparar objetos
		if("profesor".equals(username)) {
			return new User("profesor", "123", new ArrayList<>());
		}else {
			//De lo contrario devuelve una excepcion de SpringSecurity
			throw new UsernameNotFoundException("El usuario no existe");
		}
		
		
		*/
	

}
